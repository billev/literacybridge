<?xml version="1.0" encoding="utf-8" ?>
<xs:schema
        version="0.2.0"
        targetNamespace="http://www.literacybridge.org/2008/book"
        elementFormDefault="qualified"
        attributeFormDefault="unqualified"
        xmlns="http://www.literacybridge.org/2008/book"
        xmlns:xs="http://www.w3.org/2001/XMLSchema">


  <!--
================================
Talking Book Meta Data Schema

This is intended as to provide a low-level
description of the content and interactivity
for a talking book. 

The main structural elements are Device, Package
Folder, File, and Block.

Each of these elements acts as a container for:
 - A segment of audio content
 - Actions that occur at the beginning and end 
   of the segment of audio content
 - Button event handlers
 - Child container elements.
 
It is intended that the resolution of the 
containers can be changed without altering the content.
For example a File element with child Block elements
can be converted to a Folder element with many File elements
if required by the target player.

-->

  <xs:include schemaLocation ="TalkingBook-Actions.xsd"/>

  <!--
================================
  Content Structural Elements
================================  
-->

  <xs:element name="Package">
    <xs:annotation>
      <xs:documentation>
        A collection of content to be loaded into a talking book device.
        All container and variable names are local to the package in which they appear.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="eventHandlerElements"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="Group"/>
          <xs:element ref="File"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="containerAttributes"/>
    </xs:complexType>
  </xs:element >

  <xs:element name="Group">
    <xs:annotation>
      <xs:documentation>
        NOTE: As of 23 November 2008, the device code does not implement Group containers.
        The plan is to eventually implement it before the January 2009 pilot.
        A collection of audio files or other folders.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="eventHandlerElements"/>
        <xs:element ref="File" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attributeGroup ref="containerAttributes"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="File">
    <xs:annotation>
      <xs:documentation xmlns="http://www.w3.org/1999/xhtml">
        A single audio file
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <!-- <xs:group ref="eventHandlerElements"/> -->
        <!-- As of 23 November 2008, the device code does not implement File actions.  
              For an entire File to capture event/action pairs, a file-wide block should be created.
              Once this is implemented, minOccurs on Block will be changed to 0. -->
        <xs:element ref="Block" minOccurs ="1" maxOccurs ="unbounded">
          <xs:annotation>
            <xs:documentation xmlns="http://www.w3.org/1999/xhtml">
              As of 23 November 2008, the device code does not implement File actions.  
              For an entire File to capture event/action pairs, a file-wide block should be created.
              Once this is implemented, minOccurs on Block will be changed to 0.
            </xs:documentation>
          </xs:annotation>          
        </xs:element>
      </xs:sequence>
      <xs:attributeGroup ref="containerAttributes"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="Block">
    <xs:annotation>
      <xs:documentation>
        A block of content within an audio file.
        Start and End times are time in milliseconds from from the end of the previous block.
        If Start or End is ommitted, the block will start or end on the file boundary.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="eventHandlerElements"/>
      </xs:sequence>
      <xs:attributeGroup ref="containerAttributes"/>
      <xs:attribute name="Start" type="xs:unsignedInt" default="0"/>
      <xs:attribute name="End" type="xs:unsignedInt" use="optional"/>
      <xs:attribute name="Class" type="xs:string"/>
    </xs:complexType>
  </xs:element>


  <!--
=========================================
  Common Attribute and Element Groups
=========================================
-->

  <xs:attributeGroup name="containerAttributes">
    <xs:attribute name="Name" type="xs:string" use="optional"/>
  </xs:attributeGroup>



  <xs:group name="eventHandlerElements">
    <xs:sequence>
      <xs:element name="OnEnter" type="actionsEnterExitType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            This event fires whenever a container is entered.
            During normal playback, this event is triggered immediately before the OnStart event.
          </xs:documentation>
        </xs:annotation>
      </xs:element >
      <xs:element name="OnExit" type="actionsEnterExitType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            This event fires whenever the player position leaves this container.
            During normal playback, this event is triggered immediately after the OnFinish event.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OnStart" type="actionsStartStopType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            This event fires whenever the 0 offset in a container is played.
          </xs:documentation>
        </xs:annotation>
      </xs:element >
      <xs:element name="OnEnd" type="actionsStartStopType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            During normal playback, this event is triggered immediately after the end point of the container and before 
            the OnExit event handler is triggered.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OnButton" type="buttonEventHandlerType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>



  <!--
=========================================
  Supprting Event, Definition, and Meta Types
=========================================
-->

  <xs:complexType name="actionsEnterExitType">
    <xs:sequence>
      <xs:element ref="SetLight" minOccurs="0" maxOccurs="1"/>        
      <xs:element ref="SetVolume" minOccurs="0" maxOccurs="1"/>        
      <xs:element ref="SetSpeed" minOccurs="0" maxOccurs="1"/>        
      </xs:sequence >
  </xs:complexType>

  <xs:complexType name="actionsStartStopType">
    <xs:sequence>
      <xs:element ref="Return" minOccurs="0" maxOccurs="1"/>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element ref="Continue"/>
        <xs:element ref="Stop"/>
        <xs:element ref="Pause"/>
        <xs:element ref="Goto"/>
      </xs:choice>    
    </xs:sequence>
    <xs:attribute name="InsertSoundBlock" type="xs:string" use="optional"/>
  </xs:complexType>
  
  <xs:complexType name="buttonEventHandlerType">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element ref="Continue"/>  
      <xs:element ref="Pause"/>  
      <xs:element ref="Stop"/>  
      <xs:element ref="Goto"/>  
      <xs:element ref="CallBlock"/>  
      <xs:element ref="Return"/>  
      <xs:element ref="NextBlock"/>
      <xs:element ref="PreviousBlock"/>
      <xs:element ref="RelativeTimeJump"/>
      <xs:element ref="SetVolume"/>  
      <xs:element ref="SetSpeed"/>  
      <xs:element ref="SetLight"/> 
    </xs:choice>
    <xs:attribute name="Button" use="required" type="buttonType"/>
    <xs:attribute name="Action" default="Click" type="buttonActionType"/>
  </xs:complexType>


  <!--
=========================================
  Supporting Simple Types
=========================================
-->


  <xs:simpleType name="buttonActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Click">
      <xs:annotation>
        <xs:documentation>
          Fires when a button is pressed and released in less than 0.5 seconds.
        </xs:documentation>
      </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hold">
        <xs:annotation>
          <xs:documentation>
            Fires when a button is pressed and held for more than 0.5 seconds.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration >
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="buttonType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PlayPause"/>
      <xs:enumeration value="Plus"/>
      <xs:enumeration value="Minus"/>
      <xs:enumeration value="Left"/>
      <xs:enumeration value="Right"/>
      <xs:enumeration value="Up"/>
      <xs:enumeration value="Down"/>
      <xs:enumeration value="Select"/>
      <xs:enumeration value="Home"/>
      <xs:enumeration value="Star"/>
    </xs:restriction>
  </xs:simpleType>


</xs:schema>
